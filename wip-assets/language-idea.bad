# Bipples Action Declaration (BAD)
# A syntax for declaring actions, entities, and states

# Entity declarations, [] means each term has the predicate attached to it
object [bed chair fridge stove].
food [snack meal].

# A simple declaration
item ingredients.

# A programmatic declaration, F is an item if F is food
item F :- food F.

# State declaration
# Each predicate within the state is an action that can be taken here
base {
	approach X :- object X.
	exercise.
}

# Action declaration
# Items after -> are effects
# Items within [] are also effects, but they're status effects, so they're treated special

exercise -> lost(stamina), [stamina - 15].

# ext is a module for calling entine functions
approach X -> at X, [stamina - (ext:distance Self X)].

at bed {
	[base]. # [X] marks inheriting all actions from state X
	sleep.
	nap.
	relax.
}

relax -> laying, [stamina + 5].

at chair {
	[base].
	sit.
}

sit -> sitting, gained stamina, [stamina + 3].
stand(C) -> at C, [stamina - 1].

sitting {
	sit.
	stand chair.
}

laying {
	relax.
	stand bed.
}

at fridge {
	[base].
	get snack.
	get ingredients.
}

get X -> holding X, [stamina - 0.2].

holding O
{
	[base].
	eat O :- food O.
}

# Combined state
at stove, holding ingredients {
	[base].
	cook ingredients.
}

cook ingredients -> holding meal, [stamina - 3].

eat F -> gained food, [food + (ext:value F), stamina - 0.1].
